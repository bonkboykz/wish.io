"use client";

import { useState } from "react";
import Image from "next/image";
import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
  CardFooter,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Heart } from "lucide-react";

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞
interface Gift {
  id: string;
  name: string;
  description: string;
  price: number;
  image: string;
  reserved?: boolean;
}

export default function MyReservePage() {
  const [wishlist, setWishlist] = useState<{ myReserveGifts: Gift[] }>({
    myReserveGifts: [
      {
        id: "1",
        name: "–ö–Ω–∏–≥–∞ '–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞'",
        description: "–õ—é–±–∏–º–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ, —Ö–æ—á—É –∏–º–µ—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω–æ–º –∏–∑–¥–∞–Ω–∏–∏",
        price: 2000,
        image: "/placeholder.svg?height=200&width=200",
        reserved: true,
      },
      {
        id: "3",
        name: "–ö–æ—Ñ–µ–º–∞—à–∏–Ω–∞",
        description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞ –¥–ª—è –¥–æ–º–∞",
        price: 30000,
        image: "/placeholder.svg?height=200&width=200",
        reserved: true,
      },
    ],
  });

  const [liked, setLiked] = useState<{ [key: string]: boolean }>({});
  const [showCancel, setShowCancel] = useState<{ [key: string]: boolean }>({});

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ª–∞–π–∫–∞
  const toggleLiked = (id: string) => {
    setLiked((prev) => ({
      ...prev,
      [id]: !prev[id],
    }));
  };

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞ "–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤"
  const toggleShowCancel = (id: string) => {
    setShowCancel((prev) => ({
      ...prev,
      [id]: !prev[id],
    }));
  };

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
  const reservedGifts = wishlist.myReserveGifts.filter((gift) => gift.reserved);

  return (
    <div className="container mx-auto px-4 py-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <h2 className="text-2xl font-bold text-center mb-6 text-gray-800">
        üéÅ –ú–æ–∏ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
      </h2>

      {/* –°–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {reservedGifts.length > 0 ? (
          reservedGifts.map((gift) => (
            <Card
              key={gift.id}
              className="overflow-hidden shadow-lg rounded-2xl transition-all duration-300 hover:shadow-xl bg-white"
            >
              {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
              <div className="relative h-56 bg-gray-100">
                <Image
                  src={gift.image || "/placeholder.svg"}
                  alt={gift.name}
                  fill
                  className="object-cover rounded-t-2xl"
                />
              </div>

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ */}
              <CardHeader className="p-4">
                <CardTitle className="text-lg font-semibold text-gray-900">
                  {gift.name}
                </CardTitle>
              </CardHeader>

              <CardContent className="p-4">
                <p className="text-gray-600">{gift.description}</p>
                <p className="text-xl font-bold mt-3 text-gray-800">
                  {gift.price} —Ç–≥
                </p>
              </CardContent>

              {/* –§—É—Ç–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ */}
              <CardFooter className="p-4 flex justify-between items-center">
                <Button
                  variant="outline"
                  className={`transition-all ${
                    showCancel[gift.id]
                      ? "bg-red-500 text-white hover:bg-red-600"
                      : "text-gray-700 bg-gray-200 hover:bg-gray-300"
                  }`}
                  onClick={() => toggleShowCancel(gift.id)}
                >
                  {showCancel[gift.id]
                    ? "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–∑–µ—Ä–≤"
                    : "‚úÖ –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ"}
                </Button>
                <Button
                  variant="ghost"
                  size="icon"
                  className="hover:scale-110 transition-transform"
                  onClick={() => toggleLiked(gift.id)}
                >
                  <Heart
                    className="h-6 w-6 transition-colors duration-200"
                    fill={liked[gift.id] ? "red" : "none"}
                    color={liked[gift.id] ? "red" : "gray"}
                  />
                </Button>
              </CardFooter>
            </Card>
          ))
        ) : (
          // –ï—Å–ª–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ—Ç
          <div className="col-span-3 flex flex-col items-center text-gray-600">
            <p className="text-lg">üòî –ù–µ—Ç –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤</p>
            <p className="text-sm text-gray-500 mt-2">
              –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏, –æ–Ω–∏ –æ—Ç–æ–±—Ä–∞–∑—è—Ç—Å—è
              –∑–¥–µ—Å—å.
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
